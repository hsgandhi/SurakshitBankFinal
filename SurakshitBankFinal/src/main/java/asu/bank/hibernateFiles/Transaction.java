package asu.bank.hibernateFiles;

// Generated Oct 24, 2014 12:58:34 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Transaction generated by hbm2java
 */
@Entity
@Table(name = "transaction", catalog = "surakshit_bank")
public class Transaction implements java.io.Serializable {

	private Integer transactionId;
	private User userByPrimaryParty;
	private User userBySecondaryParty;
	private String transactionType;
	private String transactionCurrentStatus;
	private Double transactionAmount;
	private Set<Transactionsstatus> transactionsstatuses = new HashSet(0);

	public Transaction() {
	}

	public Transaction(User userByPrimaryParty, User userBySecondaryParty,
			String transactionType, String transactionCurrentStatus) {
		this.userByPrimaryParty = userByPrimaryParty;
		this.userBySecondaryParty = userBySecondaryParty;
		this.transactionType = transactionType;
		this.transactionCurrentStatus = transactionCurrentStatus;
	}

	public Transaction(User userByPrimaryParty, User userBySecondaryParty,
			String transactionType, String transactionCurrentStatus,
			Double transactionAmount, Set<Transactionsstatus> transactionsstatuses) {
		this.userByPrimaryParty = userByPrimaryParty;
		this.userBySecondaryParty = userBySecondaryParty;
		this.transactionType = transactionType;
		this.transactionCurrentStatus = transactionCurrentStatus;
		this.transactionAmount = transactionAmount;
		this.transactionsstatuses = transactionsstatuses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "TransactionID", unique = true, nullable = false)
	public Integer getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(Integer transactionId) {
		this.transactionId = transactionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PrimaryParty", nullable = false)
	public User getUserByPrimaryParty() {
		return this.userByPrimaryParty;
	}

	public void setUserByPrimaryParty(User userByPrimaryParty) {
		this.userByPrimaryParty = userByPrimaryParty;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SecondaryParty", nullable = false)
	public User getUserBySecondaryParty() {
		return this.userBySecondaryParty;
	}

	public void setUserBySecondaryParty(User userBySecondaryParty) {
		this.userBySecondaryParty = userBySecondaryParty;
	}

	@Column(name = "TransactionType", nullable = false, length = 20)
	public String getTransactionType() {
		return this.transactionType;
	}

	public void setTransactionType(String transactionType) {
		this.transactionType = transactionType;
	}

	@Column(name = "TransactionCurrentStatus", nullable = false, length = 20)
	public String getTransactionCurrentStatus() {
		return this.transactionCurrentStatus;
	}

	public void setTransactionCurrentStatus(String transactionCurrentStatus) {
		this.transactionCurrentStatus = transactionCurrentStatus;
	}

	@Column(name = "TransactionAmount", precision = 14)
	public Double getTransactionAmount() {
		return this.transactionAmount;
	}

	public void setTransactionAmount(Double transactionAmount) {
		this.transactionAmount = transactionAmount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
	public Set<Transactionsstatus> getTransactionsstatuses() {
		return this.transactionsstatuses;
	}

	public void setTransactionsstatuses(Set<Transactionsstatus> transactionsstatuses) {
		this.transactionsstatuses = transactionsstatuses;
	}

}
